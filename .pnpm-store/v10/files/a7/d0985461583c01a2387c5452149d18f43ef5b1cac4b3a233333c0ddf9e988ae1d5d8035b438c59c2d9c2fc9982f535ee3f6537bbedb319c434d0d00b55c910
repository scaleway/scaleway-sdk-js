import { API as ParentAPI } from '@scaleway/sdk-client';
import type { ApiLocality, WaitForOptions } from '@scaleway/sdk-client';
import type { CreateDatabaseRequest, Database, DatabaseBackup, DeleteDatabaseRequest, ExportDatabaseBackupRequest, GetDatabaseBackupRequest, GetDatabaseRequest, ListDatabaseBackupsRequest, ListDatabaseBackupsResponse, ListDatabasesRequest, ListDatabasesResponse, RestoreDatabaseFromBackupRequest, UpdateDatabaseRequest } from './types.gen';
/**
 * Serverless SQL Databases API.

This API allows you to manage your Serverless SQL Databases.
 */
export declare class API extends ParentAPI {
    /**
     * Locality of this API.
     * type âˆˆ {'zone','region','global','unspecified'}
     */
    static readonly LOCALITY: ApiLocality;
    /**
     * Create a new Serverless SQL Database. You must provide the following parameters: `organization_id`, `project_id`, `name`, `cpu_min`, `cpu_max`. You can also provide `from_backup_id` to create a database from a backup.
     *
     * @param request - The request {@link CreateDatabaseRequest}
     * @returns A Promise of Database
     */
    createDatabase: (request: Readonly<CreateDatabaseRequest>) => Promise<Database>;
    /**
     * Get a database information. Retrieve information about your Serverless SQL Database. You must provide the `database_id` parameter.
     *
     * @param request - The request {@link GetDatabaseRequest}
     * @returns A Promise of Database
     */
    getDatabase: (request: Readonly<GetDatabaseRequest>) => Promise<Database>;
    /**
     * Waits for {@link Database} to be in a final state.
     *
     * @param request - The request {@link GetDatabaseRequest}
     * @param options - The waiting options
     * @returns A Promise of Database
     */
    waitForDatabase: (request: Readonly<GetDatabaseRequest>, options?: Readonly<WaitForOptions<Database>>) => Promise<Database>;
    /**
     * Delete a database. Deletes a database. You must provide the `database_id` parameter. All data stored in the database will be permanently deleted.
     *
     * @param request - The request {@link DeleteDatabaseRequest}
     * @returns A Promise of Database
     */
    deleteDatabase: (request: Readonly<DeleteDatabaseRequest>) => Promise<Database>;
    protected pageOfListDatabases: (request?: Readonly<ListDatabasesRequest>) => Promise<ListDatabasesResponse>;
    /**
     * List your Serverless SQL Databases. List all Serverless SQL Databases for a given Scaleway Organization or Scaleway Project. By default, the databases returned in the list are ordered by creation date in ascending order, though this can be modified via the order_by field. For the `name` parameter, the value you include will be checked against the whole name string to see if it includes the string you put in the parameter.
     *
     * @param request - The request {@link ListDatabasesRequest}
     * @returns A Promise of ListDatabasesResponse
     */
    listDatabases: (request?: Readonly<ListDatabasesRequest>) => Promise<ListDatabasesResponse> & {
        all: () => Promise<Database[]>;
        [Symbol.asyncIterator]: () => AsyncGenerator<Database[], void, void>;
    };
    /**
     * Update database information. Update CPU limits of your Serverless SQL Database. You must provide the `database_id` parameter.
     *
     * @param request - The request {@link UpdateDatabaseRequest}
     * @returns A Promise of Database
     */
    updateDatabase: (request: Readonly<UpdateDatabaseRequest>) => Promise<Database>;
    /**
     * Restore a database from a backup. Restore a database from a backup. You must provide the `backup_id` parameter.
     *
     * @param request - The request {@link RestoreDatabaseFromBackupRequest}
     * @returns A Promise of Database
     */
    restoreDatabaseFromBackup: (request: Readonly<RestoreDatabaseFromBackupRequest>) => Promise<Database>;
    /**
     * Get a database backup information. Retrieve information about your Serverless SQL Database backup. You must provide the `backup_id` parameter.
     *
     * @param request - The request {@link GetDatabaseBackupRequest}
     * @returns A Promise of DatabaseBackup
     */
    getDatabaseBackup: (request: Readonly<GetDatabaseBackupRequest>) => Promise<DatabaseBackup>;
    protected pageOfListDatabaseBackups: (request: Readonly<ListDatabaseBackupsRequest>) => Promise<ListDatabaseBackupsResponse>;
    /**
     * List your Serverless SQL Database backups. List all Serverless SQL Database backups for a given Scaleway Project or Database. By default, the backups returned in the list are ordered by creation date in descending order, though this can be modified via the order_by field.
     *
     * @param request - The request {@link ListDatabaseBackupsRequest}
     * @returns A Promise of ListDatabaseBackupsResponse
     */
    listDatabaseBackups: (request: Readonly<ListDatabaseBackupsRequest>) => Promise<ListDatabaseBackupsResponse> & {
        all: () => Promise<DatabaseBackup[]>;
        [Symbol.asyncIterator]: () => AsyncGenerator<DatabaseBackup[], void, void>;
    };
    /**
     * Export a database backup. Export a database backup providing a download link once the export process is completed. You must provide the `backup_id` parameter.
     *
     * @param request - The request {@link ExportDatabaseBackupRequest}
     * @returns A Promise of DatabaseBackup
     */
    exportDatabaseBackup: (request: Readonly<ExportDatabaseBackupRequest>) => Promise<DatabaseBackup>;
}
