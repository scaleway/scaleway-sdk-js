"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const sdkClient = require("@scaleway/sdk-client");
const marshalling_gen = require("./marshalling.gen.cjs");
class API extends sdkClient.API {
  /**
   * Locality of this API.
   * type âˆˆ {'zone','region','global','unspecified'}
   */
  static LOCALITY = sdkClient.toApiLocality({
    regions: ["fr-par", "nl-ams"]
  });
  /**
   * List events. Retrieve the list of Audit Trail events for a Scaleway Organization and/or Project. You must specify the `organization_id` and optionally, the `project_id`.
   *
   * @param request - The request {@link ListEventsRequest}
   * @returns A Promise of ListEventsResponse
   */
  listEvents = (request = {}) => this.client.fetch(
    {
      method: "GET",
      path: `/audit-trail/v1alpha1/regions/${sdkClient.validatePathParam("region", request.region ?? this.client.settings.defaultRegion)}/events`,
      urlParams: sdkClient.urlParams(
        ["method_name", request.methodName],
        ["order_by", request.orderBy],
        [
          "organization_id",
          request.organizationId ?? this.client.settings.defaultOrganizationId
        ],
        [
          "page_size",
          request.pageSize ?? this.client.settings.defaultPageSize
        ],
        ["page_token", request.pageToken],
        ["product_name", request.productName],
        ["project_id", request.projectId],
        ["recorded_after", request.recordedAfter],
        ["recorded_before", request.recordedBefore],
        ["resource_type", request.resourceType],
        ["service_name", request.serviceName],
        ["status", request.status]
      )
    },
    marshalling_gen.unmarshalListEventsResponse
  );
  /**
   * Retrieve the list of Scaleway resources for which you have Audit Trail events.
   *
   * @param request - The request {@link ListProductsRequest}
   * @returns A Promise of ListProductsResponse
   */
  listProducts = (request = {}) => this.client.fetch(
    {
      method: "GET",
      path: `/audit-trail/v1alpha1/regions/${sdkClient.validatePathParam("region", request.region ?? this.client.settings.defaultRegion)}/products`,
      urlParams: sdkClient.urlParams([
        "organization_id",
        request.organizationId ?? this.client.settings.defaultOrganizationId
      ])
    },
    marshalling_gen.unmarshalListProductsResponse
  );
}
exports.API = API;
