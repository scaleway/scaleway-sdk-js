{
  "$schema": "./node_modules/@biomejs/biome/configuration_schema.json",
  "vcs": {
    "clientKind": "git",
    "useIgnoreFile": true,
    "defaultBranch": "main"
  },
  "files": {
    "maxSize": 10000000,
    "ignoreUnknown": true,
    "includes": ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json"],
    "experimentalScannerIgnores": [
      "**/node_modules/",
      "**/dist/",
      "**/build/",
      "**/coverage/",
      "**/examples/",
      "**/*.gen.ts",
      "**/*.min.js",
      ".pnpm-store/",
      ".next/",
      ".turbo/**",
      "storybook-static",
      ".docusaurus",
      ".vitest-reports",
      "**/__snapshots__/"
    ]
  },
  "formatter": {
    "enabled": true,
    "formatWithErrors": false,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineEnding": "lf",
    "lineWidth": 80,
    "attributePosition": "auto"
  },
  "javascript": {
    "formatter": {
      "jsxQuoteStyle": "double",
      "quoteProperties": "asNeeded",
      "trailingCommas": "all",
      "semicolons": "asNeeded",
      "arrowParentheses": "asNeeded",
      "bracketSpacing": true,
      "bracketSameLine": false,
      "quoteStyle": "single",
      "attributePosition": "auto"
    }
  },
  "json": {
    "formatter": {
      "enabled": false
    },
    "parser": {
      "allowComments": true
    },
    "linter": {
      "enabled": false
    }
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "complexity": {
        "noForEach": "warn",
        "noExcessiveCognitiveComplexity": "warn",
        "noUselessStringConcat": "error"
      },
      "correctness": {
        "noUnusedVariables": "warn",
        "noUnusedImports": "warn",
        "useExhaustiveDependencies": "warn"
      },
      "style": {
        "noDefaultExport": "error",
        "useNamingConvention": {
          "level": "error",
          "options": {
            "strictCase": false,
            "conventions": [
              {
                "selector": {
                  "kind": "enumMember"
                },
                "formats": ["PascalCase"]
              },
              {
                "selector": {
                  "kind": "classMember",
                  "modifiers": ["private"]
                },
                "formats": ["camelCase"],
                "match": "_?[a-z].*"
              }
            ]
          }
        },
        "useConsistentArrayType": "off",
        "noParameterAssign": "warn",
        "noNonNullAssertion": "warn"
      },
      "suspicious": {
        "noExplicitAny": "warn",
        "noEmptyBlockStatements": "warn",
        "noArrayIndexKey": "warn"
      },
      "nursery": {
        "useSortedClasses": "off"
      }
    }
  },
  "overrides": [
    {
      "includes": ["**/*.test.ts", "**/__tests__/**/*.ts", "**/vite.config.ts", "vitest.config.ts"],
      "linter": {
        "rules": {
          "correctness": {
            "noUnusedVariables": "off"
          }
        }
      }
    },
    {
      "includes": [
        "packages_generated/dedibox/src/v1/*.ts",
        "packages/clients/src/api/dedibox/v1/*.ts"
      ],
      "linter": {
        "rules": {
          "correctness": {
            "noUnusedVariables": "off"
          },
          "style": {
            "useConsistentArrayType": "off"
          },
          "suspicious": {
            "noExplicitAny": "off"
          }
        }
      }
    },
    {
      "includes": [
        "packages/clients/src/scw/**/*.ts",
        "packages/clients/src/internal/**/*.ts"
      ],
      "linter": {
        "rules": {
          "correctness": {
            "noUnusedVariables": "off"
          },
          "style": {
            "useConsistentArrayType": "off"
          }
        }
      }
    }
  ]
}

